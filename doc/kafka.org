* Architecture
  [[./png/kafka/kafka.architecture.png]]
* Difference (Confluent / Kafka / MSK)
** KAFKA vs MSK
   No. Difference. The kafka is deployed in the AWS as one service.
** Confluent KAFKA = KAFKA(Open source) + Peripherals service(KSQL/Schema registry/Connectors/etc)
  [[https://www.confluent.io/blog/license-changes-confluent-platform/][Confluent licencing]]
*** Supported connector of Confluent
  [[https://docs.confluent.io/kafka-connectors/self-managed/overview.html#connectors-to-kafka][connector]]

* Deployment
** Config file preparation
   #+BEGIN_SRC
$more embed/examples/aws/aws-nodes-kafka.yaml
 workstation:
   imageid: ami-07d02ee1eeb0c996c                  # Workstation EC2 instance
   keyname: jay-us-east-01                         # Public key for workstation instance deployment
   keyfile: /home/pi/.ssh/jay-us-east-01.pem       # Private key to access the workstation
   volumeSize: 100                                 # disk size in the workstation
 aws_kafka_topo_configs:
   general:
     # debian os
     imageid: ami-07d02ee1eeb0c996c                # Default image id for EC2
     keyname: jay-us-east-01                       # Public key to access the EC2 instance
     keyfile: /home/pi/.ssh/jay-us-east-01.pem     # Private key to access the EC2 instance
     cidr: 172.83.0.0/16                           # The cidr for the VPC
     instance_type: m5.2xlarge                     # Default instance type
     tidb_version: v6.1.0                          # kafka version
     excluded_az:                                  # The AZ to be excluded for the subnets
       - us-east-1e
     enable_nat: true                              # The flag to decide whether the nat is created in the kafka VPC
   zookeeper:
     instance_type: c5.2xlarge                     # Instance type for zookeeper component
     count: 3                                      # Number of zookeeper node to be deployed
   schema_registry:
     instance_type: c5.2xlarge                     # Instance type of schema registry
     count: 1                                      # Number of schema registry node to be deployed
   connector:
     instance_type: c5.2xlarge                     # Instance type of connector
     count: 2                                      # Number of connector node to be deployed
   rest_service:
     instance_type: c5.2xlarge                     # Instance type of rest service
     count: 1                                      # Number of rest service node to be deployed
   broker:
     instance_type: c5.xlarge                      # Instance type of broker
     count: 3                                      # Number of broker nodes to be deployed
     volumeSize: 100                               # Storage size for TiKV nodes (GB)
     volumeType: io2                               # Storage type ex. gp2(default), gp3, io2
     iops: 3000                                    # Storage IOPS(Only for gp3, io2)
   #+END_SRC
** Kafka cluster deployment
  [[./png/kafka/kafka.01.png]]
  [[./png/kafka/kafka.02.png]]
** List Resources
  [[./png/kafka/kafka.03.png]]
  [[./png/kafka/kafka.04.png]]
** Performance test
*** Producer and consume performance test
   #+BEGIN_SRC
$./bin/aws kafka perf produce-consume kafkatest --partitions 6 --num-of-records 500000 --bytes-of-record 1024 --ssh-user admin --identity-file /home/ohmytiup/.ssh/id_rsa
   #+END_SRC
   [[./png/kafka/kafka.05.png]]
*** End 2 End performance test
    #+BEGIN_SRC
$./bin/aws kafka perf end2end kafkatest --partitions 3 --num-of-records 100000 --bytes-of-record 1024 --producer-acks 1 --ssh-user admin --identity-file /home/ohmytiup/.ssh/id_rsa
    #+END_SRC
    [[./png/kafka/kafka.06.png]]

* Performance measurement
  https://medium.com/metrosystemsro/apache-kafka-how-to-test-performance-for-clients-configured-with-ssl-encryption-3356d3a0d52b
